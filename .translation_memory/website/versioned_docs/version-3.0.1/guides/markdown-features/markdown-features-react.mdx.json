{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-3.0.1/guides/markdown-features/markdown-features-react.mdx",
  "source_file_content_hash": "6caeccf5206d3daf7fbe4fad5d909aeac688142352b2202480eddc36b381e25a",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: react\ndescription: Using the power of React in Docusaurus Markdown documents, thanks to MDX\nslug: /markdown-features/react\n---",
      "source_content_hash": "b1cc7f57751ebf4370d2ec697c7513f4afcc908565e48a73d2a32b56b0723af4",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "a703643c",
      "source_content": "# MDX and React",
      "source_content_hash": "b410271908ead2c4b9f0b2a329ab56864cbc206eb19d795742d0e3dbfb94de8c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "# MDX 與 React"
      }
    },
    {
      "segment_id": "71d8dc9b",
      "source_content": "```mdx-code-block\nimport BrowserWindow from '@site/src/components/BrowserWindow';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport styles from './markdown-features-react.module.css';\n```",
      "source_content_hash": "b0bdb146edeb82721632439ed6b1df62e8275073eff18cbdd2eb188477b52c03",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_71d8dc9b"
      }
    },
    {
      "segment_id": "86b54d44",
      "source_content": "Docusaurus has built-in support for [MDX](https://mdxjs.com/), which allows you to write JSX within your Markdown files and render them as React components.",
      "source_content_hash": "901acff869f10be04c9de33d95cd633219a1f72f246c2dd6f38198bfbe8e1758",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Docusaurus 內建支援 [MDX](https://mdxjs.com/)，允許您在 Markdown 文件中編寫 JSX 並將其渲染為 React 元件。"
      }
    },
    {
      "segment_id": "39b3772c",
      "source_content": "Check out the [MDX docs](https://mdxjs.com/) to see what fancy stuff you can do with MDX.",
      "source_content_hash": "9f22a99735b592812cc25e8122d32908e3b7a844b357694e83dcac5ceb3f434e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "查看 [MDX 文件](https://mdxjs.com/) 了解您可以使用 MDX 實現哪些進階功能。"
      }
    },
    {
      "segment_id": "80e6256a",
      "source_content": ":::tip[Debugging MDX]\n\nThe MDX format is quite strict, and you may get compilation errors.\n\nUse the **[MDX playground](https://mdxjs.com/playground/)** to debug them and make sure your syntax is valid.\n\n:::",
      "source_content_hash": "10c59da315cc59b7455667b49a68fa50d3778a451f7316aaf71efe8c855802ef",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::tip[除錯 MDX]\n\nMDX 格式相當嚴格，您可能會遇到編譯錯誤。\n\n使用 **[MDX 遊樂場](https://mdxjs.com/playground/)** 進行除錯，確保您的語法是有效的。\n\n:::"
      }
    },
    {
      "segment_id": "3c36424c",
      "source_content": "### Exporting components {#exporting-components}",
      "source_content_hash": "7d33dd9bfe1deb7124619ea9dd405757a0ce08248635b3f2c022f240d2da89e1",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 匯出元件 {#exporting-components}"
      }
    },
    {
      "segment_id": "26524352",
      "source_content": "To define any custom component within an MDX file, you have to export it: only paragraphs that start with `export` will be parsed as components instead of prose.",
      "source_content_hash": "0f698510a82252911502143f8a1726162bb05baf0435c41aef89fabaa45267da",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "要在 MDX 文件中定義任何自訂元件，您必須將其匯出：只有以 `export` 開頭的段落才會被解析為元件而非普通文字。"
      }
    },
    {
      "segment_id": "b017063d",
      "source_content": "```jsx\nexport const Highlight = ({children, color}) => (\n  <span\n    style={{\n      backgroundColor: color,\n      borderRadius: '2px',\n      color: '#fff',\n      padding: '0.2rem',\n    }}>\n    {children}\n  </span>\n);\n\n<Highlight color=\"#25c2a0\">Docusaurus green</Highlight> and <Highlight color=\"#1877F2\">Facebook blue</Highlight> are my favorite colors.\n\nI can write **Markdown** alongside my _JSX_!\n```",
      "source_content_hash": "c2933edc993e0df2a3798440fda265c271086aa2a745f951752f7179a0d277d4",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_b017063d"
      }
    },
    {
      "segment_id": "a44047a5",
      "source_content": "Notice how it renders both the markup from your React component and the Markdown syntax:",
      "source_content_hash": "75e2e85bb4c1245854a148ee0e635f32317af19d42f1d68b163a487d06d8a370",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "請注意它如何同時渲染您的 React 元件標記和 Markdown 語法："
      }
    },
    {
      "segment_id": "64b6f348",
      "source_content": "```mdx-code-block\nexport const Highlight = ({children, color}) => (\n  <span\n    style={{\n      backgroundColor: color,\n      borderRadius: '2px',\n      color: '#fff',\n      padding: '0.2rem',\n    }}>\n    {children}\n  </span>\n);\n\n<BrowserWindow minHeight={240}>\n\n<><Highlight color=\"#25c2a0\">Docusaurus green</Highlight>\n{` `}and <Highlight color=\"#1877F2\">Facebook blue</Highlight> are my favorite colors.</>\n\nI can write **Markdown** alongside my _JSX_!\n\n</BrowserWindow>\n```",
      "source_content_hash": "10c23b335079abbc8c1bb0f838ca6dea25aed9f84fd1f91758db8c66f58004ec",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_64b6f348"
      }
    },
    {
      "segment_id": "9186a173",
      "source_content": ":::warning[MDX is JSX]\n\nSince all doc files are parsed using MDX, anything that looks like HTML is actually JSX. Therefore, if you need to inline-style a component, follow JSX flavor and provide style objects.\n\n{/* prettier-ignore */}\n```jsx\n/* Instead of this: */\n<span style=\"background-color: red\">Foo</span>\n/* Use this: */\n<span style={{backgroundColor: 'red'}}>Foo</span>\n```\n\n:::",
      "source_content_hash": "73facb61daa5bdacc23d7ea5455aadf39993bdd393cc525dc5d0cb13179841e3",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::warning[MDX 即 JSX]\n\n由於所有文件都是使用 MDX 解析的，任何看起來像 HTML 的內容實際上是 JSX。因此，如果您需要內聯樣式元件，請遵循 JSX 風格並提供樣式物件。\n\n{/* prettier-ignore */}\n```jsx\n/* 不要這樣做： */\n<span style=\"background-color: red\">Foo</span>\n/* 請這樣做： */\n<span style={{backgroundColor: 'red'}}>Foo</span>\n```\n\n:::"
      }
    },
    {
      "segment_id": "3a8d2b95",
      "source_content": "### Importing components {#importing-components}",
      "source_content_hash": "bc824d9a4f56eee7f45fc3dbd6702aa4f4ccdc79c655e3c24fa8675e813eb2dd",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 匯入元件 {#importing-components}"
      }
    },
    {
      "segment_id": "5803caac",
      "source_content": "You can also import your own components defined in other files or third-party components installed via npm.",
      "source_content_hash": "ef63ebfa9aab8c339ea47dbb33bda302d9671ce0d127be22a7c0901eead14ff9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "您也可以匯入其他文件中定義的自訂元件或透過 npm 安裝的第三方元件。"
      }
    },
    {
      "segment_id": "daa16011",
      "source_content": "```md\n<!-- Docusaurus theme component -->\nimport TOCInline from '@theme/TOCInline';\n<!-- External component -->\nimport Button from '@mui/material/Button';\n<!-- Custom component -->\nimport BrowserWindow from '@site/src/components/BrowserWindow';\n```",
      "source_content_hash": "8f90ee8934116a7aef9d67437b8b5cb1ab0803c52222274729eef31d64a244e6",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_daa16011"
      }
    },
    {
      "segment_id": "5ae4e2a6",
      "source_content": ":::tip\n\nThe `@site` alias points to your website's directory, usually where the `docusaurus.config.js` file is. Using an alias instead of relative paths (`'../../src/components/BrowserWindow'`) saves you from updating import paths when moving files around, or when [versioning docs](../docs/versioning.mdx) and [translating](../../i18n/i18n-tutorial.mdx).\n\n:::",
      "source_content_hash": "34572f63b34602760244ab20e30f43e8c49b05099d3a9ac78d3ea206ad233c33",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::tip\n\n`@site` 別名指向您網站的目錄，通常是 `docusaurus.config.js` 文件所在的位置。使用別名而非相對路徑（如 `'../../src/components/BrowserWindow'`）可以避免在移動文件或進行[文件版本控制](../docs/versioning.mdx)和[翻譯](../../i18n/i18n-tutorial.mdx)時更新匯入路徑。\n\n:::"
      }
    },
    {
      "segment_id": "0e80209e",
      "source_content": "While declaring components within Markdown is very convenient for simple cases, it becomes hard to maintain because of limited editor support, risks of parsing errors, and low reusability. Use a separate `.js` file when your component involves complex JS logic:",
      "source_content_hash": "76070d14b1ca7d3d2e71d6e1039f0c916803f65daaa1a17f9411d9c28010fb7c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "雖然在 Markdown 中宣告元件對於簡單情況非常方便，但由於編輯器支援有限、解析錯誤風險和低可重用性，維護起來會變得困難。當您的元件涉及複雜的 JS 邏輯時，請使用獨立的 `.js` 文件："
      }
    },
    {
      "segment_id": "59534425",
      "source_content": "```jsx title=\"src/components/Highlight.js\"\nimport React from 'react';\n\nexport default function Highlight({children, color}) {\n  return (\n    <span\n      style={{\n        backgroundColor: color,\n        borderRadius: '2px',\n        color: '#fff',\n        padding: '0.2rem',\n      }}>\n      {children}\n    </span>\n  );\n}\n```",
      "source_content_hash": "9cd71282eb66d26e382e351edd7e3121567497a1e0f9682d346363d5d8d4785a",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_59534425"
      }
    },
    {
      "segment_id": "2f34b0ad",
      "source_content": "```md title=\"markdown-file.mdx\"\nimport Highlight from '@site/src/components/Highlight';\n\n<Highlight color=\"#25c2a0\">Docusaurus green</Highlight>\n```",
      "source_content_hash": "f1835a5f5cd34c8a34ef4058195da73ea5643cbbcdcb98c026baafe959c7cec2",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_2f34b0ad"
      }
    },
    {
      "segment_id": "1865603e",
      "source_content": ":::tip\n\nIf you use the same component across a lot of files, you don't need to import it everywhere—consider adding it to the global scope. [See below](#mdx-component-scope)\n\n:::",
      "source_content_hash": "83e3417c800624d79543f1266aaa422117201bc8b818b3047074dc6d416ef495",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::tip\n\n如果您在多個文件中使用相同的元件，不需要在每個地方都匯入它——考慮將其添加到全域範圍。[參見下方](#mdx-component-scope)\n\n:::"
      }
    },
    {
      "segment_id": "fff17ff8",
      "source_content": "### MDX component scope {#mdx-component-scope}",
      "source_content_hash": "d65d067ec299b9d28ced49e7a200df9b921086f95e1d538b66dc7a10fb8adc1c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### MDX 元件作用域 {#mdx-component-scope}"
      }
    },
    {
      "segment_id": "8664ed0b",
      "source_content": "Apart from [importing a component](#importing-components) and [exporting a component](#exporting-components), a third way to use a component in MDX is to **register it to the global scope**, which will make it automatically available in every MDX file, without any import statements.",
      "source_content_hash": "6ac576a81d6e5c26a56749bbc9d07490ec1db01cdf1ea51c7be26d71b43d8653",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "除了[匯入元件](#importing-components)和[匯出元件](#exporting-components)之外，第三種在 MDX 中使用元件的方法是**將其註冊到全域作用域**，這將使其自動在所有 MDX 文件中可用，無需任何匯入語句。"
      }
    },
    {
      "segment_id": "9e90a9b3",
      "source_content": "For example, given this MDX file:",
      "source_content_hash": "c23f682f7d31919f15ee7b2b0fbfecd63e6757aa35f8899d58324a70976c07f5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "例如，給定以下 MDX 文件："
      }
    },
    {
      "segment_id": "a4a107b4",
      "source_content": "```md\n- a\n- list!\n\nAnd some <Highlight>custom markup</Highlight>...\n```",
      "source_content_hash": "defed103d21743e341bfdf136473fa75ef11b7ba6fddcafd9566933e32f374a9",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_a4a107b4"
      }
    },
    {
      "segment_id": "42d9ca67",
      "source_content": "It will be compiled to a React component containing `ul`, `li`, `p`, and `Highlight` elements. `Highlight` is not a native html element: you need to provide your own React component implementation for it.",
      "source_content_hash": "4c2eb6024e2f87f66d90ff8f9b60a38743d2195ba7ab14a0a658f3c97e303913",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "它將被編譯為包含 `ul`、`li`、`p` 和 `Highlight` 元素的 React 元件。`Highlight` 不是原生 HTML 元素：您需要為其提供自己的 React 元件實現。"
      }
    },
    {
      "segment_id": "619c3209",
      "source_content": "In Docusaurus, the MDX component scope is provided by the `@theme/MDXComponents` file. It's not a React component, _per se_, unlike most other exports under the `@theme/` alias: it is a record from tag names like `Highlight` to their React component implementations.",
      "source_content_hash": "d6f9f281431e213e04a27be493e2bf98a6217aa7ae3f15412cc79620d66f3470",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在 Docusaurus 中，MDX 元件作用域由 `@theme/MDXComponents` 文件提供。與 `@theme/` 別名下的大多數其他匯出不同，它本身不是一個 React 元件，而是一個從標籤名稱（如 `Highlight`）到其 React 元件實現的記錄。"
      }
    },
    {
      "segment_id": "44285072",
      "source_content": "If you [swizzle](../../swizzling.mdx) this component, you will find all tags that have been implemented, and you can further customize our implementation by swizzling the respective sub-component, like `@theme/MDXComponents/Code` (which is used to render [Markdown code blocks](./markdown-features-code-blocks.mdx)).",
      "source_content_hash": "f3b5b8be2482d6f135ea12ec67f7aacf28b7732802c59f0f686939bd1614b3ea",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "如果你[替換 (swizzle)](../../swizzling.mdx) 這個元件，你會發現所有已實作的標籤，並可以透過替換個別子元件（例如 `@theme/MDXComponents/Code`，用於渲染 [Markdown 程式碼區塊](./markdown-features-code-blocks.mdx)）進一步自訂我們的實作。"
      }
    },
    {
      "segment_id": "a8f09c71",
      "source_content": "If you want to register extra tag names (like the `<Highlight>` tag above), you should consider [wrapping `@theme/MDXComponents`](../../swizzling.mdx#wrapping), so you don't have to maintain all the existing mappings. Since the swizzle CLI doesn't allow wrapping non-component files yet, you should manually create the wrapper:",
      "source_content_hash": "1adf742c87b5f5714046135fe8f39938d832e098482859fe57e757b2882a0879",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "如果你想註冊額外的標籤名稱（如上述的 `<Highlight>` 標籤），應考慮[包裝 `@theme/MDXComponents`](../../swizzling.mdx#wrapping)，這樣就不需維護所有現有的映射。由於替換 CLI 目前不支援包裝非元件檔案，你需要手動建立包裝器："
      }
    },
    {
      "segment_id": "25a51782",
      "source_content": "```js title=\"src/theme/MDXComponents.js\"\nimport React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\n// highlight-next-line\nimport Highlight from '@site/src/components/Highlight';\n\nexport default {\n  // Re-use the default mapping\n  ...MDXComponents,\n  // Map the \"<Highlight>\" tag to our Highlight component\n  // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n  // highlight-next-line\n  Highlight,\n};\n```",
      "source_content_hash": "419ae06b1c02c957cccdc64137aefd855ddad9681fc4f43cd56f99c613419677",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_25a51782"
      }
    },
    {
      "segment_id": "61a78cbe",
      "source_content": "And now, you can freely use `<Highlight>` in every page, without writing the import statement:",
      "source_content_hash": "cd681037a386f4310a640359bf24debba0db95999736c9464f98841bb5ea6c98",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "現在，你可以在每個頁面中自由使用 `<Highlight>`，而無需撰寫 import 語句："
      }
    },
    {
      "segment_id": "904df6eb",
      "source_content": "```md\nI can conveniently use <Highlight color=\"#25c2a0\">Docusaurus green</Highlight> everywhere!\n```",
      "source_content_hash": "c9b05e685637b0829bcfe7e961ba5074489ba12f47b9d806477d087685552b8b",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_904df6eb"
      }
    },
    {
      "segment_id": "44ecd2e3",
      "source_content": "```mdx-code-block\n<BrowserWindow>\n\nI can conveniently use <Highlight color=\"#25c2a0\">Docusaurus green</Highlight> everywhere!\n\n</BrowserWindow>\n```",
      "source_content_hash": "0106f3d0917f1cde5986e3bbca893a93a6e3a9503b5f2ccc78bc17f783c3733a",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_44ecd2e3"
      }
    },
    {
      "segment_id": "260ce6ea",
      "source_content": ":::warning\n\nWe use **upper-case** tag names like `Highlight` on purpose.\n\nFrom MDX v3+ onward (Docusaurus v3+), lower-case tag names are always rendered as native html elements, and will not use any component mapping you provide.\n\n:::",
      "source_content_hash": "8940347a8710ac2e5885081874a4efc741d1a2abe6981675cfd496b53c323384",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::warning\n\n我們刻意使用**大寫**標籤名稱如 `Highlight`。\n\n從 MDX v3+ 開始（Docusaurus v3+），小寫標籤名稱一律會渲染為原生 HTML 元素，且不會使用你提供的任何元件映射。\n\n:::"
      }
    },
    {
      "segment_id": "e53b773f",
      "source_content": ":::warning\n\nThis feature is powered by [an `MDXProvider`](https://mdxjs.com/docs/using-mdx/#mdx-provider). If you are importing Markdown in a React page, you have to supply this provider yourself through the `MDXContent` theme component.\n\n```jsx title=\"src/pages/index.js\"\nimport React from 'react';\nimport FeatureDisplay from './_featureDisplay.mdx';\n// highlight-next-line\nimport MDXContent from '@theme/MDXContent';\n\nexport default function LandingPage() {\n  return (\n    <div>\n      {/* highlight-start */}\n      <MDXContent>\n        <FeatureDisplay />\n      </MDXContent>\n      {/* highlight-end */}\n    </div>\n  );\n}\n```\n\nIf you don't wrap your imported MDX with `MDXContent`, the global scope will not be available.\n\n:::",
      "source_content_hash": "1b4759e6815f77bb5f11f234869f54fd9295461223d674834997e06fb5a1c1f7",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::warning\n\n此功能由 [`MDXProvider`](https://mdxjs.com/docs/using-mdx/#mdx-provider) 驅動。若你在 React 頁面中導入 Markdown，需透過 `MDXContent` 主題元件自行提供此供應器。\n\n```jsx title=\"src/pages/index.js\"\nimport React from 'react';\nimport FeatureDisplay from './_featureDisplay.mdx';\n// highlight-next-line\nimport MDXContent from '@theme/MDXContent';\n\nexport default function LandingPage() {\n  return (\n    <div>\n      {/* highlight-start */}\n      <MDXContent>\n        <FeatureDisplay />\n      </MDXContent>\n      {/* highlight-end */}\n    </div>\n  );\n}\n```\n\n若未將導入的 MDX 用 `MDXContent` 包裹，全域作用域將無法使用。\n\n:::"
      }
    },
    {
      "segment_id": "43662a16",
      "source_content": "### Markdown and JSX interoperability {#markdown-and-jsx-interoperability}",
      "source_content_hash": "973e307689270357362852baaec5a6573596de232e9f9b49032f1770886dcf1e",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### Markdown 與 JSX 的互通性 {#markdown-and-jsx-interoperability}"
      }
    },
    {
      "segment_id": "85821ad3",
      "source_content": "Docusaurus v3 is using [MDX v3](https://mdxjs.com/blog/v3/).",
      "source_content_hash": "006074561ffab4663176fe10521423375b675b186439008c6a647e24a8be545e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Docusaurus v3 使用 [MDX v3](https://mdxjs.com/blog/v3/)。"
      }
    },
    {
      "segment_id": "228d01d5",
      "source_content": "The [MDX syntax](https://mdxjs.com/docs/what-is-mdx/#mdx-syntax) is mostly compatible with [CommonMark](https://commonmark.org/), but is much stricter because your `.mdx` files can use JSX and are compiled into real React components (check the [playground](https://mdxjs.com/playground/)).",
      "source_content_hash": "5b0efec94b1bcb6d2cefaee55becdb1080be6070f0cb28918d5b26b910beb86d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "[MDX 語法](https://mdxjs.com/docs/what-is-mdx/#mdx-syntax) 大多與 [CommonMark](https://commonmark.org/) 相容，但更為嚴格，因為你的 `.mdx` 檔案可使用 JSX 並會被編譯成真正的 React 元件（參見 [遊樂場](https://mdxjs.com/playground/)）。"
      }
    },
    {
      "segment_id": "85b17c36",
      "source_content": "Some valid CommonMark features won't work with MDX ([more info](https://mdxjs.com/docs/what-is-mdx/#markdown)), notably:",
      "source_content_hash": "9353298707312228f9e86274c49dda79442e0d154fdb6e07996248ca730ed364",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "部分有效的 CommonMark 功能在 MDX 中無法使用（[更多資訊](https://mdxjs.com/docs/what-is-mdx/#markdown)），特別是："
      }
    },
    {
      "segment_id": "c97d46ef",
      "source_content": "- Indented code blocks: use triple backticks instead\n- Autolinks (`<http://localhost:3000>`): use regular link syntax instead (`[http://localhost:3000](http://localhost:3000)`)\n- HTML syntax (`<p style=\"color: red;\">`): use JSX instead (`<p style={{color: 'red'}}>`)\n- Unescaped `{` and `<`: escape them with `\\` instead (`\\{` and `\\<`)",
      "source_content_hash": "b2fcb91369d4277487ef461d3c5de496049fbdb5e531168473a62585b0688999",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 縮排式程式碼區塊：改用三個反引號\n- 自動連結（`<http://localhost:3000>`）：改用標準連結語法（`[http://localhost:3000](http://localhost:3000)`）\n- HTML 語法（`<p style=\"color: red;\">`）：改用 JSX（`<p style={{color: 'red'}}>`）\n- 未跳脫的 `{` 和 `<`：用 `\\` 跳脫（`\\{` 和 `\\<`）"
      }
    },
    {
      "segment_id": "0b194c02",
      "source_content": ":::danger[Experimental CommonMark support]\n\nDocusaurus v3 makes it possible to opt-in for a less strict, standard [CommonMark](https://commonmark.org/) support with the following options:\n\n- The `mdx.format: md` front matter\n- The `.md` file extension combined with the `siteConfig.markdown.format: \"detect\"` configuration\n\nThis feature is **experimental** and currently has a few [limitations](https://github.com/facebook/docusaurus/issues/9092).\n\n:::",
      "source_content_hash": "d5b32f2cbf3100e6f244ea77df36eb3b2e53668e4e9ad20bcf83e7488745f243",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::danger[實驗性 CommonMark 支援]\n\nDocusaurus v3 可透過以下選項啟用較不嚴格、標準的 [CommonMark](https://commonmark.org/) 支援：\n\n- `mdx.format: md` 前言資料\n- 副檔名為 `.md` 的檔案搭配 `siteConfig.markdown.format: \"detect\"` 設定\n\n此功能為**實驗性**，目前有部分[限制](https://github.com/facebook/docusaurus/issues/9092)。\n\n:::"
      }
    },
    {
      "segment_id": "34bbfe56",
      "source_content": "## Importing code snippets {#importing-code-snippets}",
      "source_content_hash": "7b797fdfa41e87f460824c01d095c6d56faa8419d553b96bccb8280104f56904",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 導入程式碼片段 {#importing-code-snippets}"
      }
    },
    {
      "segment_id": "318fb07e",
      "source_content": "You can not only import a file containing a component definition, but also import any code file as raw text, and then insert it in a code block, thanks to [Webpack raw-loader](https://webpack.js.org/loaders/raw-loader/). In order to use `raw-loader`, you first need to install it in your project:",
      "source_content_hash": "1f6c9d84cfe8be4593765950e2fd51720d2d3d072ed848c8d03ce5dffe638da5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "你不僅可以導入包含元件定義的檔案，還能導入任何程式碼檔案作為原始文字，並將其插入程式碼區塊中，這要歸功於 [Webpack raw-loader](https://webpack.js.org/loaders/raw-loader/)。要使用 `raw-loader`，需先在專案中安裝它："
      }
    },
    {
      "segment_id": "3e53354a",
      "source_content": "```bash npm2yarn\nnpm install --save raw-loader\n```",
      "source_content_hash": "dc19dceede52bf30a3df0ef3275c8c9bfd1f7b04458ba9d9a12987c910a6c7d3",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_3e53354a"
      }
    },
    {
      "segment_id": "f6e7e6a7",
      "source_content": "Now you can import code snippets from another file as it is:",
      "source_content_hash": "0f334d39ceefd631da35943c12fa3099bc32f37af903e206275dd2c4008868dc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "現在你可以直接導入其他檔案中的程式碼片段："
      }
    },
    {
      "segment_id": "5b5a3953",
      "source_content": "```jsx title=\"myMarkdownFile.mdx\"\nimport CodeBlock from '@theme/CodeBlock';\nimport MyComponentSource from '!!raw-loader!./myComponent';\n\n<CodeBlock language=\"jsx\">{MyComponentSource}</CodeBlock>\n```",
      "source_content_hash": "e011979ac4feea54f1ecbabacd71acc40b5db2e049ae96b0a95a6d725f1b41fd",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_5b5a3953"
      }
    },
    {
      "segment_id": "a3c4300b",
      "source_content": "```mdx-code-block\nimport CodeBlock from '@theme/CodeBlock';\nimport MyComponentSource from '!!raw-loader!@site/src/pages/examples/_myComponent';\n\n<BrowserWindow>\n\n<CodeBlock language=\"jsx\">{MyComponentSource}</CodeBlock>\n\n</BrowserWindow>\n```",
      "source_content_hash": "1d8b34074aa601775e4f5e8cd373922798fa578327631e58e630d213d8857864",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_a3c4300b"
      }
    },
    {
      "segment_id": "5014d30c",
      "source_content": "See [using code blocks in JSX](./markdown-features-code-blocks.mdx#usage-in-jsx) for more details of the `<CodeBlock>` component.",
      "source_content_hash": "3f1d7c38f579a03b7e337295f486a2f5d3c79ebf1f59483cc08758bf32834487",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "詳見 [在 JSX 中使用程式碼區塊](./markdown-features-code-blocks.mdx#usage-in-jsx) 以獲取更多關於 `<CodeBlock>` 元件的細節。"
      }
    },
    {
      "segment_id": "6ea8f96a",
      "source_content": ":::note\n\nYou have to use `<CodeBlock>` rather than the Markdown triple-backtick ` ``` `, because the latter will ship out any of its content as-is, but you want to interpolate the imported text here.\n\n:::",
      "source_content_hash": "6531805d1f88acb45e491cf92e6decb3754ee544a1e23f3d1237a37fa45b2bf3",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::note\n\n你必須使用 `<CodeBlock>` 而非 Markdown 的三重反引號 ` ``` `，因為後者會將其內容原樣輸出，而這裡你需要插入導入的文字內容。\n\n:::"
      }
    },
    {
      "segment_id": "33dfb2ba",
      "source_content": ":::warning\n\nThis feature is experimental and might be subject to breaking API changes in the future.\n\n:::",
      "source_content_hash": "52a0e784b92203a36d13bda304c15cc49d116da38331f40dd1e23d3d17dfb433",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::warning\n\n此功能為實驗性質，未來可能會有不兼容的 API 變更。\n\n:::"
      }
    },
    {
      "segment_id": "f8d1807a",
      "source_content": "## Importing Markdown {#importing-markdown}",
      "source_content_hash": "4781b7c38eb3fb9eb12de03737649bc9cf269963a08ddb969a69e9f67a611270",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 導入 Markdown {#importing-markdown}"
      }
    },
    {
      "segment_id": "c95293b9",
      "source_content": "You can use Markdown files as components and import them elsewhere, either in Markdown files or in React pages.",
      "source_content_hash": "37b24dec7a240d6eec660b07add0c1f6bc9871b37573f188e3edc459212e4c07",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "你可以將 Markdown 檔案作為元件導入，並在其他 Markdown 檔案或 React 頁面中使用。"
      }
    },
    {
      "segment_id": "7ed923ee",
      "source_content": "By convention, using the **`_` filename prefix** will not create any doc page and means the Markdown file is a **\"partial\"**, to be imported by other files.",
      "source_content_hash": "17bee925b7970abfb3068895a1f40f778c03914bd9d9e5928c00dbe6d870d1e0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "按照慣例，使用 **`_` 前綴的檔名** 不會創建任何文檔頁面，表示該 Markdown 檔案是一個 **「部分」**，將被其他檔案導入。"
      }
    },
    {
      "segment_id": "a85d7a64",
      "source_content": "```md title=\"_markdown-partial-example.mdx\"\n<span>Hello {props.name}</span>\n\nThis is text some content from `_markdown-partial-example.mdx`.\n```",
      "source_content_hash": "10defea7e751d57ed77aefea4837ace8544e5b3ebc4f2417d3d2a8f1560c9f46",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_a85d7a64"
      }
    },
    {
      "segment_id": "7a5ad31f",
      "source_content": "```jsx title=\"someOtherDoc.mdx\"\nimport PartialExample from './_markdown-partial-example.mdx';\n\n<PartialExample name=\"Sebastien\" />\n```",
      "source_content_hash": "e7cab576127f77ad5bbaccad5bc5aa89aa3bd9d993dc6624ee41ada22e306fd9",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_7a5ad31f"
      }
    },
    {
      "segment_id": "bdb6a28d",
      "source_content": "```mdx-code-block\nimport PartialExample from './_markdown-partial-example.mdx';\n\n<BrowserWindow>\n  <PartialExample name=\"Sebastien\" />\n</BrowserWindow>\n```",
      "source_content_hash": "0030c93130ccea16cdda82ff80d030721eced90f38d318014341f2f9654d5ddf",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_bdb6a28d"
      }
    },
    {
      "segment_id": "b8954ec9",
      "source_content": "This way, you can reuse content among multiple pages and avoid duplicating materials.",
      "source_content_hash": "9b24b3f829e7077ae6eda6cce5e3b9bd925c7f6296f7b9ca3179e25310692958",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "這樣一來，你可以在多個頁面中重用內容，避免材料重複。"
      }
    },
    {
      "segment_id": "9fff7f5d",
      "source_content": ":::warning\n\nCurrently, the table of contents does not contain the imported Markdown headings. This is a technical limitation that we are trying to solve ([issue](https://github.com/facebook/docusaurus/issues/3915)).\n\n:::",
      "source_content_hash": "62fb3632f59f04aa04196f13f553c643333c19990c56e699747b6d4af1fbe85b",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::warning\n\n目前，導入的 Markdown 標題不會包含在目錄中。這是一個我們正在嘗試解決的技術限制 ([issue](https://github.com/facebook/docusaurus/issues/3915))。\n\n:::"
      }
    },
    {
      "segment_id": "450f22b0",
      "source_content": "## Available exports {#available-exports}",
      "source_content_hash": "601f397853aa1759fcc0f7d8688f9027a8c87abd0c301a558e1b86e980bc01b5",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 可用的導出 {#available-exports}"
      }
    },
    {
      "segment_id": "a6c4ab41",
      "source_content": "Within the MDX page, the following variables are available as globals:",
      "source_content_hash": "e61b023b9ccba6806a5eb6cbd574e77bb27fb988aaa5f25b86008132d42f20ed",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在 MDX 頁面中，以下變量可作為全局變量使用："
      }
    },
    {
      "segment_id": "b8b9f7f7",
      "source_content": "- `frontMatter`: the front matter as a record of string keys and values;\n- `toc`: the table of contents, as a tree of headings. See also [Inline TOC](./markdown-features-toc.mdx#inline-table-of-contents) for a more concrete use-case.\n- `contentTitle`: the Markdown title, which is the first `h1` heading in the Markdown text. It's `undefined` if there isn't one (e.g. title specified in the front matter).",
      "source_content_hash": "a536bda9214d0cd3202716fa03241892921f64a095c90331b705b6533b10e1fb",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- `frontMatter`: 前置元數據，為字串鍵值對的記錄；\n- `toc`: 目錄，為標題的樹狀結構。另見 [內聯目錄](./markdown-features-toc.mdx#inline-table-of-contents) 以獲得更具體的使用案例。\n- `contentTitle`: Markdown 標題，即 Markdown 文本中的第一個 `h1` 標題。如果沒有（例如在前置元數據中指定了標題），則為 `undefined`。"
      }
    },
    {
      "segment_id": "110aef9c",
      "source_content": "```jsx\nimport TOCInline from '@theme/TOCInline';\nimport CodeBlock from '@theme/CodeBlock';\n\nThe table of contents for this page, serialized:\n\n<CodeBlock className=\"language-json\">{JSON.stringify(toc, null, 2)}</CodeBlock>\n\nThe front matter of this page:\n\n<ul>\n  {Object.entries(frontMatter).map(([key, value]) => <li key={key}><b>{key}</b>: {value}</li>)}\n</ul>\n\n<p>The title of this page is: <b>{contentTitle}</b></p>\n```",
      "source_content_hash": "10c3df3b2f9e80a4692908071fd55c2d7019ec2bb0adb3f5ed5bbd113531d69c",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_110aef9c"
      }
    },
    {
      "segment_id": "21658060",
      "source_content": "```mdx-code-block\nimport TOCInline from '@theme/TOCInline';\n\n<BrowserWindow>\n\nThe table of contents for this page, serialized:\n\n<CodeBlock className=\"language-json\">{JSON.stringify(toc, null, 2)}</CodeBlock>\n\nThe front matter of this page:\n\n<ul>\n  {Object.entries(frontMatter).map(([key, value]) => <li key={key}><b>{key}</b>: {value}</li>)}\n</ul>\n\n<p>The title of this page is: <b>{contentTitle}</b></p>\n\n</BrowserWindow>\n```",
      "source_content_hash": "ed00224afec6f2e34a2a5f1a8af74de19d48cfe900980d98cf54e219f6e77ed4",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_21658060"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-3.0.1/guides/markdown-features/markdown-features-react.mdx",
  "last_updated_timestamp": "2025-06-13T16:23:07.115127+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "6caeccf5206d3daf7fbe4fad5d909aeac688142352b2202480eddc36b381e25a"
  }
}