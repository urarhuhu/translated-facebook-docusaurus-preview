{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-3.1.1/guides/markdown-features/markdown-features-plugins.mdx",
  "source_file_content_hash": "eb8408bc9c9d227f5275fd569a2c15c35641248f7b874f63bbb227982cffe9b6",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: plugins\ndescription: Using MDX plugins to expand Docusaurus Markdown functionalities\nslug: /markdown-features/plugins\n---",
      "source_content_hash": "2d04deb5ec798229fed8eaa34044dcca7f67c475583fb863933e79d4083783ca",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "a703643c",
      "source_content": "# MDX Plugins",
      "source_content_hash": "ab0b35fea6b965f6787b511eb568e745298cdc68ab11b7e00791fd8430bb22d0",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "# MDX 插件"
      }
    },
    {
      "segment_id": "53eaf0e1",
      "source_content": "Sometimes, you may want to extend or tweak your Markdown syntax. For example:",
      "source_content_hash": "7fe5e9da639928abcad052736a7bc9bff36029d1c8fa7cf18d835ef93ad95d09",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "有時您可能需要擴展或調整 Markdown 語法。例如："
      }
    },
    {
      "segment_id": "be33979e",
      "source_content": "- How do I embed youtube videos using the image syntax (`![](https://youtu.be/yKNxeF4KMsY)`)?\n- How do I style links that are on their own lines differently, e.g., as a social card?\n- How do I make every page start with a copyright notice?",
      "source_content_hash": "1af4bc1176c54348467f17cb72d32b13458e71ce110bad2b803a244c81eccdae",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 如何使用圖片語法 (`![](https://youtu.be/yKNxeF4KMsY)`) 嵌入 YouTube 影片？\n- 如何為獨立成行的連結設定不同樣式（例如社交卡片樣式）？\n- 如何讓每個頁面開頭自動加入版權聲明？"
      }
    },
    {
      "segment_id": "cf898102",
      "source_content": "And the answer is: create an MDX plugin! MDX has a built-in [plugin system](https://mdxjs.com/advanced/plugins/) that can be used to customize how the Markdown files will be parsed and transformed to JSX. There are three typical use-cases of MDX plugins:",
      "source_content_hash": "c46d84b43c9db328fc7cdf28224a1f40fc3e2d6a7fbff92f4f0748ff7359a41c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "答案就是：建立 MDX 插件！MDX 內建[插件系統](https://mdxjs.com/advanced/plugins/)，可用於自訂 Markdown 文件如何被解析並轉換為 JSX。MDX 插件有三種典型使用情境："
      }
    },
    {
      "segment_id": "84758135",
      "source_content": "- Using existing [remark plugins](https://github.com/remarkjs/remark/blob/main/doc/plugins.md#list-of-plugins) or [rehype plugins](https://github.com/rehypejs/rehype/blob/main/doc/plugins.md#list-of-plugins);\n- Creating remark/rehype plugins to transform the elements generated by existing MDX syntax;\n- Creating remark/rehype plugins to introduce new syntaxes to MDX.",
      "source_content_hash": "017814bee7bdf0b8d59c9f12557b72900ebd455c38e216f55ffcd9a00c69024f",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 使用現有的 [remark 插件](https://github.com/remarkjs/remark/blob/main/doc/plugins.md#list-of-plugins)或 [rehype 插件](https://github.com/rehypejs/rehype/blob/main/doc/plugins.md#list-of-plugins)；\n- 建立 remark/rehype 插件來轉換既有 MDX 語法生成的元素；\n- 建立 remark/rehype 插件為 MDX 引入新語法。"
      }
    },
    {
      "segment_id": "f5f6d2ce",
      "source_content": "If you play with the [MDX playground](https://mdxjs.com/playground/), you would notice that the MDX transpilation has two intermediate steps: Markdown AST (MDAST), and Hypertext AST (HAST), before arriving at the final JSX output. MDX plugins also come in two forms:",
      "source_content_hash": "8699d3e1b2fbb288c76fe874edae2308426891f337cce38ab34a3041df6a0095",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "若您試用 [MDX 遊樂場](https://mdxjs.com/playground/)，會注意到 MDX 轉譯有兩個中間步驟：Markdown 抽象語法樹（MDAST）和超文本抽象語法樹（HAST），最終才輸出 JSX。MDX 插件也分兩種形式："
      }
    },
    {
      "segment_id": "1b8c1887",
      "source_content": "- **[Remark](https://github.com/remarkjs/remark/)**: processes the Markdown AST.\n- **[Rehype](https://github.com/rehypejs/rehype/)**: processes the Hypertext AST.",
      "source_content_hash": "ca2c08674d795f00234bf63495b6aca0de91dacdd6d1eff50b7a8c4bd22a2830",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- **[Remark](https://github.com/remarkjs/remark/)**：處理 Markdown 抽象語法樹。\n- **[Rehype](https://github.com/rehypejs/rehype/)**：處理超文本抽象語法樹。"
      }
    },
    {
      "segment_id": "a2f1eaea",
      "source_content": ":::tip\n\nUse plugins to introduce shorter syntax for the most commonly used JSX elements in your project. The [admonition](./markdown-features-admonitions.mdx) syntax that we offer is also generated by a Remark plugin, and you could do the same for your own use case.\n\n:::",
      "source_content_hash": "1b9de4c55421fe32faf1d481f6f9e164e7f7d847a77f34798bd0adb5bdb19808",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::tip\n\n使用插件為專案中最常用的 JSX 元素引入簡潔語法。我們提供的[警告框](./markdown-features-admonitions.mdx)語法也是透過 Remark 插件生成，您可依此模式實現自訂需求。\n\n:::"
      }
    },
    {
      "segment_id": "b25f21be",
      "source_content": "## Default plugins {#default-plugins}",
      "source_content_hash": "1ba941c86063d71e97dea093971db491c62decc7ad361f60aa1447db266856f3",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 預設插件 {#default-plugins}"
      }
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "Docusaurus injects [some default Remark plugins](https://github.com/facebook/docusaurus/tree/main/packages/docusaurus-mdx-loader/src/remark) during Markdown processing. These plugins would:",
      "source_content_hash": "8df645668b9bbb0082868cec48a832f14d73ade54437cb5ff6163ca0496b84fa",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Docusaurus 在 Markdown 處理過程中會注入[一些預設 Remark 插件](https://github.com/facebook/docusaurus/tree/main/packages/docusaurus-mdx-loader/src/remark)，這些插件會："
      }
    },
    {
      "segment_id": "7a2e981c",
      "source_content": "- Generate the table of contents;\n- Add anchor links to each heading;\n- Transform images and links to `require()` calls.\n- …",
      "source_content_hash": "449dfc6a341dd9c42a2a93cf1150018f0c743490d3c7e45c950e0a64ad7b7500",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 生成目錄；\n- 為每個標題添加錨點連結；\n- 將圖片和連結轉換為 `require()` 調用；\n- …"
      }
    },
    {
      "segment_id": "3cfe6286",
      "source_content": "These are all typical use-cases of Remark plugins, which can also be a source of inspiration if you want to implement your own plugin.",
      "source_content_hash": "6659ca57bf8e55d71e7b087f83db18aae28f32a4f0bb462c427b8d5ce3a2170b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "這些都是 Remark 插件的典型應用場景，也可作為開發自訂插件時的參考範例。"
      }
    },
    {
      "segment_id": "06c0f776",
      "source_content": "## Installing plugins {#installing-plugins}",
      "source_content_hash": "e25902f51c515a1107f8320bf4881668c35eed95d64a075468a4c7c0b69e0398",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 安裝插件 {#installing-plugins}"
      }
    },
    {
      "segment_id": "aa1e7006",
      "source_content": "An MDX plugin is usually an npm package, so you install them like other npm packages using npm. Take the [math plugins](./markdown-features-math-equations.mdx) as an example.",
      "source_content_hash": "5ed7ecac6f24df79022bca1c8d5ac6420a2a1475298e10be520760d8d5b894d8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "MDX 插件通常是 npm 套件，因此需透過 npm 安裝。以[數學公式插件](./markdown-features-math-equations.mdx)為例："
      }
    },
    {
      "segment_id": "b75ddc12",
      "source_content": "```bash npm2yarn\nnpm install --save remark-math@5 rehype-katex@6\n```",
      "source_content_hash": "ecfa9dc3db8cb38895cab390a75ead2bad87ec714d43cc14c1a455f3c4276433",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_b75ddc12"
      }
    },
    {
      "segment_id": "8e90ad3a",
      "source_content": "<details>\n  <summary>How are <code>remark-math</code> and <code>rehype-katex</code> different?</summary>\n\nIn case you are wondering how Remark and Rehype are different, here is a good example. `remark-math` operates on the Markdown AST, where it sees text like `$...$`, and all it does is transform that to the JSX `<span class=\"math math-inline\">...</span>` without doing too much with the content. This decouples the extraction of math formulae from their rendering, which means you can swap $\\KaTeX$ out with other math renderers, like MathJax (with [`rehype-mathjax`](https://github.com/remarkjs/remark-math/tree/main/packages/rehype-mathjax)), just by replacing the Rehype plugin.\n\nNext, the `rehype-katex` operates on the Hypertext AST where everything has been converted to HTML-like tags already. It traverses all the elements with `math` class and uses $\\KaTeX$ to parse and render the content to actual HTML.\n\n</details>",
      "source_content_hash": "de5753ce42ffbcc4461da211d0d93f95cc256e410d3e5e227c234a19261557f9",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_8e90ad3a"
      }
    },
    {
      "segment_id": "d82460ed",
      "source_content": ":::warning\n\nMany official Remark/Rehype plugins are [**ES Modules only**](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c), a JavaScript module system, which Docusaurus supports. We recommend using an [**ES Modules**](https://flaviocopes.com/es-modules/) config file to make it easier to import such packages.\n\n:::",
      "source_content_hash": "572eb79f29bce48295501d6138fc3f7139cf0617d366326838a138999eb48e27",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::warning\n\n許多官方 Remark/Rehype 插件僅支援[**ES Modules**](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c)，這是 Docusaurus 支援的 JavaScript 模組系統。建議使用[**ES Modules**](https://flaviocopes.com/es-modules/) 設定檔來簡化這類套件的導入。\n\n:::"
      }
    },
    {
      "segment_id": "531437ca",
      "source_content": "Next, import your plugins and add them to the plugin options through plugin or preset config in `docusaurus.config.js`:",
      "source_content_hash": "06f604c24e39281f595e18d19f2ca3706776f4b25e2bb4cab5fbc1ff01a75a06",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "接著在 `docusaurus.config.js` 中導入插件，並透過插件或預設配置添加到插件選項："
      }
    },
    {
      "segment_id": "67b24fc5",
      "source_content": "```js title=\"docusaurus.config.js\"\n// highlight-start\nimport remarkMath from 'remark-math';\nimport rehypeKatex from 'rehype-katex';\n// highlight-end\n\n// highlight-start\nexport default {\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        docs: {\n          path: 'docs',\n          // highlight-start\n          remarkPlugins: [remarkMath],\n          rehypePlugins: [rehypeKatex],\n          // highlight-end\n        },\n      },\n    ],\n  ],\n};\n```",
      "source_content_hash": "0d06f7d169d7c1fb715650f4b9771e0301708353db792e7431be71d1b3892bb0",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_67b24fc5"
      }
    },
    {
      "segment_id": "2ef748d1",
      "source_content": "<details>\n  <summary>Using a [**CommonJS**](https://nodejs.org/api/modules.html#modules-commonjs-modules) config file?</summary>\n\nIf you decide to use a CommonJS config file, it is possible to load those ES module plugins thanks to dynamic imports and an async config creator function:\n\n```js title=\"docusaurus.config.js\"\n// highlight-start\nmodule.exports = async function createConfigAsync() {\n  // highlight-end\n  return {\n    presets: [\n      [\n        '@docusaurus/preset-classic',\n        {\n          docs: {\n            path: 'docs',\n            // highlight-start\n            remarkPlugins: [(await import('remark-math')).default],\n            rehypePlugins: [(await import('rehype-katex')).default],\n            // highlight-end\n          },\n        },\n      ],\n    ],\n  };\n};\n```\n\n</details>",
      "source_content_hash": "425c1704d0be1cc28e958c7cfa37af288378c29efbf9363e54237b23a593fd83",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_2ef748d1"
      }
    },
    {
      "segment_id": "b9b8694c",
      "source_content": "## Configuring plugins {#configuring-plugins}",
      "source_content_hash": "98aaf7794e55985e34b1be86666c0421f1295635587bdf450ded03b393b71b1f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 配置插件 {#configuring-plugins}"
      }
    },
    {
      "segment_id": "b6152880",
      "source_content": "Some plugins can be configured and accept their own options. In that case, use the `[plugin, pluginOptions]` syntax, like this:",
      "source_content_hash": "543248f3da0c665ae6f05b5afc3d962384933494c2a73febad50755981e8a7a4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "部分插件可接受自訂配置選項。此時請使用 `[plugin, pluginOptions]` 語法，如下所示："
      }
    },
    {
      "segment_id": "4e583d18",
      "source_content": "```js title=\"docusaurus.config.js\"\nimport rehypeKatex from 'rehype-katex';\n\nexport default {\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        docs: {\n          rehypePlugins: [\n            // highlight-start\n            [rehypeKatex, {strict: false}],\n            // highlight-end\n          ],\n        },\n      },\n    ],\n  ],\n};\n```",
      "source_content_hash": "af29603e82e8454a960b4ec75c373004c7cdacb8cc6e346aba1c6fe17003c8cb",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4e583d18"
      }
    },
    {
      "segment_id": "f7e6e884",
      "source_content": "You should check your plugin's documentation for the options it supports.",
      "source_content_hash": "0d58ae865772b706bc321ae24fe3675a5919c1d30165d0f5820ad0cb577d9761",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "您應查閱插件文件以確認其支援的選項。"
      }
    },
    {
      "segment_id": "35353302",
      "source_content": "## Creating new rehype/remark plugins {#creating-new-rehyperemark-plugins}",
      "source_content_hash": "7af040570d5604362375ef3e32eecb2029ec74dd768ecbcc79c9ea550e4691d6",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 建立新的 rehype/remark 插件 {#creating-new-rehyperemark-plugins}"
      }
    },
    {
      "segment_id": "719d3997",
      "source_content": "If there isn't an existing package that satisfies your customization need, you can create your own MDX plugin.",
      "source_content_hash": "9150fb3675a8958a9699fb43702ef2f0b3f2680a6c8ab62db48cb27fc59ba8c7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "若現有的套件無法滿足你的客製化需求，你可以自行建立 MDX 外掛程式。"
      }
    },
    {
      "segment_id": "94366076",
      "source_content": ":::note\n\nThe writeup below is **not** meant to be a comprehensive guide to creating a plugin, but just an illustration of how to make it work with Docusaurus. Visit the [Remark](https://github.com/remarkjs/remark/blob/main/doc/plugins.md#create-plugins) or [Rehype](https://github.com/rehypejs/rehype/blob/main/doc/plugins.md#create-plugins) documentation for a more in-depth explanation of how they work.\n\n:::",
      "source_content_hash": "73aefc7caaca7f3400770ec6b923c846d260be8ba7c9b138bfdf709a301a4666",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::note\n\n以下說明**並非**建立外掛程式的完整指南，僅為示範如何使其在 Docusaurus 中運作。如需更深入的工作原理說明，請參閱 [Remark](https://github.com/remarkjs/remark/blob/main/doc/plugins.md#create-plugins) 或 [Rehype](https://github.com/rehypejs/rehype/blob/main/doc/plugins.md#create-plugins) 文件。\n\n:::"
      }
    },
    {
      "segment_id": "a8f09c71",
      "source_content": "For example, let's make a plugin that visits every `h2` heading and adds a `Section X. ` prefix. First, create your plugin source file anywhere—you can even publish it as a separate npm package and install it like explained above. We would put ours at `src/remark/section-prefix.js`. A remark/rehype plugin is just a function that receives the `options` and returns a `transformer` that operates on the AST.",
      "source_content_hash": "69775749bb5ece71bb0bf5922b3e1e45207312b3f2c107b563bb6226faea1233",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "舉例來說，我們建立一個外掛程式，為每個 `h2` 標題加上 `Section X. ` 前綴。首先，在任何位置建立外掛程式原始檔——你甚至可以將其發佈為獨立的 npm 套件並如前述方式安裝。我們將外掛程式放在 `src/remark/section-prefix.js`。remark/rehype 外掛程式本質上是一個接收 `options` 並返回操作 AST 的 `transformer` 的函式。"
      }
    },
    {
      "segment_id": "25a51782",
      "source_content": "```js \"src/remark/section-prefix.js\"\nimport visit from 'unist-util-visit';\n\nconst plugin = (options) => {\n  const transformer = async (ast) => {\n    let number = 1;\n    visit(ast, 'heading', (node) => {\n      if (node.depth === 2 && node.children.length > 0) {\n        node.children.unshift({\n          type: 'text',\n          value: `Section ${number}. `,\n        });\n        number++;\n      }\n    });\n  };\n  return transformer;\n};\n\nexport default plugin;\n```",
      "source_content_hash": "b1dc99f8b19efe8bf6f3dcdeef0f12e2836c1d92eae96b001a59c5e60a4f4389",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_25a51782"
      }
    },
    {
      "segment_id": "fe25bd72",
      "source_content": "You can now import your plugin in `docusaurus.config.js` and use it just like an installed plugin!",
      "source_content_hash": "220e45ddda39faf1f35aeb1691473cb8b46562dd1a932c7fd0a50711b894383e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "現在你可以在 `docusaurus.config.js` 中導入此外掛程式，並像使用已安裝的外掛程式一樣使用它！"
      }
    },
    {
      "segment_id": "65ba7468",
      "source_content": "```js title=\"docusaurus.config.js\"\n// highlight-next-line\nimport sectionPrefix from './src/remark/section-prefix';\n\nexport default {\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        docs: {\n          // highlight-next-line\n          remarkPlugins: [sectionPrefix],\n        },\n      },\n    ],\n  ],\n};\n```",
      "source_content_hash": "4ccb8816ba9a134510ac735632fb1dcafe301c44866e18f3b41ff22b6a1c5605",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_65ba7468"
      }
    },
    {
      "segment_id": "aeec072b",
      "source_content": ":::tip\n\nThe `transformer` has a second parameter [`vfile`](https://github.com/vfile/vfile) which is useful if you need to access the current Markdown file's path.\n\n```js\nconst plugin = (options) => {\n  const transformer = async (ast, vfile) => {\n    ast.children.unshift({\n      type: 'text',\n      value: `The current file path is ${vfile.path}`,\n    });\n  };\n  return transformer;\n};\n```\n\nOur `transformImage` plugin uses this parameter, for example, to transform relative image references to `require()` calls.\n\n:::",
      "source_content_hash": "068136ad32970804be02229607e4f67cbccff9f21eefc595276e43aaa7e973ea",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::tip\n\n`transformer` 的第二個參數 [`vfile`](https://github.com/vfile/vfile) 可用於存取當前 Markdown 檔案的路徑。\n\n```js\nconst plugin = (options) => {\n  const transformer = async (ast, vfile) => {\n    ast.children.unshift({\n      type: 'text',\n      value: `The current file path is ${vfile.path}`,\n    });\n  };\n  return transformer;\n};\n```\n\n例如，我們的 `transformImage` 外掛程式就利用此參數將相對圖片參照轉換為 `require()` 呼叫。\n\n:::"
      }
    },
    {
      "segment_id": "31289fdb",
      "source_content": ":::note\n\nThe default plugins of Docusaurus would operate before the custom remark plugins, and that means the images or links have been converted to JSX with `require()` calls already. For example, in the example above, the table of contents generated is still the same even when all `h2` headings are now prefixed by `Section X.`, because the TOC-generating plugin is called before our custom plugin. If you need to process the MDAST before the default plugins do, use the `beforeDefaultRemarkPlugins` and `beforeDefaultRehypePlugins`.\n\n```js title=\"docusaurus.config.js\"\nexport default {\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        docs: {\n          // highlight-next-line\n          beforeDefaultRemarkPlugins: [sectionPrefix],\n        },\n      },\n    ],\n  ],\n};\n```\n\nThis would make the table of contents generated contain the `Section X.` prefix as well.\n\n:::",
      "source_content_hash": "60a1a46ecdcfedf222a324d116deebd66bd240363aa268ea52454064adacccd2",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::note\n\nDocusaurus 的預設外掛程式會先於自訂 remark 外掛程式執行，這意味著圖片或連結已被轉換為帶有 `require()` 呼叫的 JSX。例如在上例中，即使所有 `h2` 標題都加上了 `Section X.` 前綴，生成的目錄仍保持不變，因為目錄生成外掛程式先於我們的自訂外掛程式執行。若需在預設外掛程式前處理 MDAST，請使用 `beforeDefaultRemarkPlugins` 和 `beforeDefaultRehypePlugins`。\n\n```js title=\"docusaurus.config.js\"\nexport default {\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        docs: {\n          // highlight-next-line\n          beforeDefaultRemarkPlugins: [sectionPrefix],\n        },\n      },\n    ],\n  ],\n};\n```\n\n如此一來，生成的目錄也會包含 `Section X.` 前綴。\n\n:::"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-3.1.1/guides/markdown-features/markdown-features-plugins.mdx",
  "last_updated_timestamp": "2025-06-13T16:23:07.124830+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "eb8408bc9c9d227f5275fd569a2c15c35641248f7b874f63bbb227982cffe9b6"
  }
}